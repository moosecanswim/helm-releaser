{{- if not (eq .Values.release_type "statefulset" ) }}
{{ $root := .}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.service.name }}
  labels:
    {{ .Values.mesh.control.label}}: {{.Release.Namespace}}-{{ .Values.service.name }}
    type: service
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.service.name }}
      {{ .Values.mesh.control.label}}: {{.Release.Namespace}}-{{ .Values.service.name }}
  replicas: 1
  template:
    metadata:
      labels:
        {{ .Values.mesh.control.label}}: {{.Release.Namespace}}-{{ .Values.service.name }}
        app: {{ .Values.service.name }}
    spec:
      containers:
      - name: {{ .Values.service.name }}
        image: {{ tpl .Values.service.image $ | quote }}
        imagePullPolicy: {{ .Values.service.imagePullPolicy | quote }}
        {{- if .Values.service.port }}
        ports:
          - containerPort: {{ .Values.service.port }}
            protocol: TCP
        {{- end }}
        env:
        {{- include "envvars" (dict "envvar" .Values.service.envvars "top" $) | indent 12 }}
        {{- if .Values.service.resources }}
        resources:
{{ toYaml .Values.service.resources | indent 10 }}
        {{- end }}
        {{- if .Values.service.storage }}
        volumeMounts:
        {{- range $v := .Values.service.storage }}
          - mountPath: {{ $v.mountPath }}
            name: {{ tpl $v.name $root }}
        {{- end }}
        {{- end }}        
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File

      - name: sidecar
        image: {{ tpl $.Values.sidecar.image $ | quote }}
        imagePullPolicy: {{ .Values.sidecar.imagePullPolicy | quote }}
        env:
        {{- include "envvars" (dict "envvar" .Values.sidecar.envvars "top" $) | indent 10 }}
        ports:
          - containerPort: 8081
            name: metrics
            protocol: TCP
          - containerPort: {{ .Values.sidecar.ports.ingress }}
            name: proxy
            protocol: TCP
        {{- if .Values.sidecar.resources }}
        resources:
{{ toYaml .Values.sidecar.resources | indent 10 }}
        {{- end }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
          - name: sidecar
            mountPath: /etc/proxy/tls/sidecar
      imagePullSecrets:
{{- if .Values.imagePullSecrets }}
{{ toYaml .Values.imagePullSecrets | indent 8 }}
{{- else }}
        - name: docker.secret
{{- end }}
      restartPolicy: Always
      serviceAccount: default
      serviceAccountName: default
      volumes:
        - name: sidecar
          secret:
            defaultMode: 420
            optional: false
            secretName: {{ .Values.sidecar.certificates.name }}
        {{- if .Values.service.storage }}
        {{- range $v := .Values.service.storage }}
        - name: {{tpl $v.name $root}}
          emptyDir: {}
        {{- end }}
        {{- end }}


{{- end }}