apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.Release.Namespace}}-{{ .Release.Name }}
  labels:
    service: {{.Release.Namespace}}-{{ .Release.Name }}
    type: service
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: {{.Release.Namespace}}-{{ .Release.Name }}
      {{.Values.global.mesh.label }}:  {{.Release.Namespace}}-{{ .Release.Name }}
  replicas: 1
  template:
    metadata:
      labels:
        app: {{.Release.Namespace}}-{{ .Release.Name }}
        {{.Values.global.mesh.label }}: {{.Release.Namespace}}-{{ .Release.Name }}
    spec:
      containers:
      - name: {{ .Release.Name }}
        image: {{ tpl .Values.fibonacci.image $ | quote }}
        imagePullPolicy: {{ .Values.fibonacci.imagePullPolicy | quote }}
        env:
      {{- range $envvar := .Values.fibonacci.envvars }}
      {{- $envName := $envvar.name | upper | replace "." "_" | replace "-" "_" }}
        {{- if eq $envvar.type "secret" }}
        - name: {{ $envName }}
          valueFrom:
            secretKeyRef:
              name: {{ $envvar.secret }}
              key: {{ $envvar.key }}
        {{- else if eq $envvar.type "value" }}
        - name: {{ $envName }}
          value: {{ tpl $envvar.value $ | quote }}
        {{- end }}
      {{- end  }}  
        {{- if .Values.fibonacci.resources }}
        resources:
{{ toYaml .Values.fibonacci.resources | indent 10 }}
        {{- end }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File

      - name: sidecar
        image: {{ tpl $.Values.sidecar.image $ | quote }}
        imagePullPolicy: {{ .Values.sidecar.imagePullPolicy | quote }}
        env:
        {{- include "greymatter.envvars" . | indent 10 }}
        ports:
          - containerPort: 10808
            name: proxy
            protocol: TCP
          - containerPort: 8443
            name: https-port
            protocol: TCP
          - containerPort: 8081
            name: metrics
            protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
          - name: sidecar
            mountPath: /etc/proxy/tls/sidecar
          - mountPath: /run/spire/socket	
            name: spire-socket


      imagePullSecrets:
        - name: docker.secret
      restartPolicy: Always
      serviceAccount: default
      serviceAccountName: default
      volumes:
        - name: sidecar
          secret:
            secretName: sidecar-certs
        - hostPath:	
            path: /run/spire/socket	
            type: DirectoryOrCreate	
          name: spire-socket	
	